stages:
  - build
  - publish
  - deploy

build:
  image: node:latest
  stage: build
  script:
    - echo "Frontend build started..."
    - unset CI
    - cd frontend
    - npm install
    - npm run build
    - ls -a
    - echo "Frontend build completed"
  artifacts:
    paths:
      - frontend/build

publish:
  image: docker:latest
  stage: publish
  tags:
    - dalfcs_docker_autoscale
  variables:
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - docker:dind
  script:
    - pwd
    - echo $SERVER_IP
    - docker --version
    - echo "$DOCKER_PWD" | docker login --username "$DOCKER_USER_NAME" --password-stdin
    - docker build -t docker.io/$DOCKER_USER_NAME/frontend:$CI_COMMIT_SHORT_SHA $CI_PROJECT_DIR/frontend/
    - docker push docker.io/$DOCKER_USER_NAME/frontend:$CI_COMMIT_SHORT_SHA
  only:
    - cicd_test

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - dalfcs_docker_autoscale
  script:
    - chmod og= $SSH_KEY
    - apk update && apk add openssh-client
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no "student@$SERVER_NAME" "docker login --username $DOCKER_USER_NAME -p $DOCKER_PWD docker.io"
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no "student@$SERVER_NAME" "docker pull docker.io/$DOCKER_USER_NAME/frontend:$CI_COMMIT_SHORT_SHA"
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no "student@$SERVER_NAME" "docker container rm -f frontend || true"
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no "student@$SERVER_NAME" "docker run -d -p 3000:3000 --name frontend docker.io/$DOCKER_USER_NAME/frontend:$CI_COMMIT_SHORT_SHA"
  environment:
    name: production_backend
    url: http://172.17.1.12:3000
  only:
    - cicd_test
